name: Generate and deploy charts
on:
  push:

jobs:
  GenerateCharts:
    runs-on: ubuntu-latest
    env:
      TERM: dumb
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch tags
        shell: bash
        run: git fetch --tags -f
      # Install additional packages
      - name: Configure Linux
        shell: bash
        if: ${{ env.COMPATIBLE == 'true' && contains(matrix.os, 'ubuntu') }}
        run: |
          if [ -x .github/scripts/configure_linux ]; then
            .github/scripts/configure_linux
          fi
      - name: Upgrade pip
        run: pip install --upgrade pip --user
      - name: Install requirements
        run: pip install -r requirements.txt --user
      - name: Generate charts
        run: python process.py
      - name: Generate archive
        run: zstd -19 charts -o charts.zst
      - name: Download autotag
        run: curl -sL https://github.com/DanySK/Gravis-CI/raw/master/autotag > autotag
      - name: Make autotag executable
        run: chmod +x autotag
      - name: Autotag
        run: ./autotag
      - name: Populate TAG and BRANCH environment variables
        shell: bash
        run: |
          TAG=$(git describe --tags --exact-match HEAD || echo '')
          echo "Current tag is: '$TAG' (setup in the TAG environment variable)"
          echo "TAG=$TAG" >> $GITHUB_ENV
          BRANCH=$([ -z "$TAG" ] && echo ${GITHUB_REF#refs/heads/} || echo $TAG)
          echo "Current tag is: '$BRANCH' (setup in BRANCH TAG environment variable)"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
      - name: Deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          MESSAGE=$(git tag -l --format='%(contents)' "$TAG")
          hub release create -m "$MESSAGE" "$TAG" || true
          hub release edit -m '' -a "charts.zst" "$TAG"
